import logging
from typing import Callable

import gradio as gr

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def build_ui(pipeline_fn: Callable[[str], str]) -> gr.Interface:
    """
    Build and return a Gradio user interface for querying the RAG system.

    Args:
        pipeline_fn (Callable[[str], str]): Function that takes a question string and returns an answer string.

    Returns:
        gr.Interface: Configured Gradio interface.
    """

    def answer_fn(question: str) -> str:
        """
        Wrapper for calling the RAG pipeline with error handling.

        Args:
            question (str): User question from input box.

        Returns:
            str: Answer generated by the pipeline.
        """
        try:
            if not question.strip():
                return "Please enter a valid question."

            logger.info(f"Received question: {question}")
            return pipeline_fn(question)

        except Exception as e:
            logger.error("Error in UI processing.", exc_info=True)
            return "An error occurred while processing your request."

    return gr.Interface(
        fn=answer_fn,
        inputs="text",
        outputs="text",
        title="Simple RAG Demo",
        description="Ask a question based on Datatonic's knowledge base",
    )
